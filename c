[33mcommit 0acfea35d0f2f3bee031852ddac4522ff25de5a0[m
Author: TALHAA23 <talhasifat23@gmail.com>
Date:   Thu Dec 12 20:30:27 2024 +0500

    12 december 2024

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..a8c89d1[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,4 @@[m
[32m+[m[32mnode_modules[m
[32m+[m[32mdist[m
[32m+[m[32mbuild[m
[32m+[m[32mvite.config.ts.timestamp-*[m
\ No newline at end of file[m
[1mdiff --git a/_vite.config.ts b/_vite.config.ts[m
[1mnew file mode 100644[m
[1mindex 0000000..a9e7696[m
[1m--- /dev/null[m
[1m+++ b/_vite.config.ts[m
[36m@@ -0,0 +1,47 @@[m
[32m+[m[32mimport { defineConfig } from "vite";[m
[32m+[m[32mimport dts from "vite-plugin-dts";[m
[32m+[m[32mimport { peerDependencies } from "./package.json";[m
[32m+[m[32m// import eslint from "vite-plugin-eslint";[m
[32m+[m[32mimport { resolve } from "path";[m
[32m+[m[32mimport tsconfigPaths from "vite-tsconfig-paths";[m
[32m+[m[32mimport { libInjectCss } from "vite-plugin-lib-inject-css";[m
[32m+[m[32mexport default defineConfig({[m
[32m+[m[32m  // publicDir: resolve(import.meta.dirname, "public"),[m
[32m+[m[32m  build: {[m
[32m+[m[32m    lib: {[m
[32m+[m[32m      // entry: "./src/index.ts", // Specifies the entry point for building the library.[m
[32m+[m[32m      entry: resolve(__dirname, "./src/index.ts"),[m
[32m+[m[32m      name: "irc", // Sets the name of the generated library.[m
[32m+[m[32m      fileName: (format) => `index.${format}.js`, // Generates the output file name based on the format.[m
[32m+[m[32m      formats: ["cjs", "es"], // Specifies the output formats (CommonJS and ES modules).[m
[32m+[m[32m    },[m
[32m+[m[32m    rollupOptions: {[m
[32m+[m[32m      external: [...Object.keys(peerDependencies)], // Defines external dependencies for Rollup bundling.[m
[32m+[m[32m    },[m
[32m+[m[32m    sourcemap: true, // Generates source maps for debugging.[m
[32m+[m[32m    emptyOutDir: true, // Clears the output directory before building.[m
[32m+[m[32m    watch: {[m
[32m+[m[32m      // include: ["src/**/*"],[m
[32m+[m[32m      include: ["**/*"],[m
[32m+[m[32m    },[m
[32m+[m[32m  },[m
[32m+[m
[32m+[m[32m  plugins: [[m
[32m+[m[32m    dts({[m
[32m+[m[32m      rollupTypes: true,[m
[32m+[m[32m      tsconfigPath: "./tsconfig.json",[m
[32m+[m[32m      insertTypesEntry: true,[m
[32m+[m[32m      compilerOptions: {[m
[32m+[m[32m        baseUrl: import.meta.dirname,[m
[32m+[m[32m        paths: {[m
[32m+[m[32m          "@types/*": ["types/*"],[m
[32m+[m[32m          "@utils/*": ["utils/*"],[m
[32m+[m[32m          "@public/*": ["public/*"],[m
[32m+[m[32m          "@hooks/*": ["src/hooks/*"],[m
[32m+[m[32m        },[m
[32m+[m[32m      },[m
[32m+[m[32m    }),[m
[32m+[m[32m    tsconfigPaths(),[m
[32m+[m[32m    libInjectCss(),[m
[32m+[m[32m  ], // Uses the 'vite-plugin-dts' plugin for generating TypeScript declaration files (d.ts).[m
[32m+[m[32m});[m
[1mdiff --git a/coverage/.tmp/coverage-0.json b/coverage/.tmp/coverage-0.json[m
[1mnew file mode 100644[m
[1mindex 0000000..79ed522[m
[1m--- /dev/null[m
[1m+++ b/coverage/.tmp/coverage-0.json[m
[36m@@ -0,0 +1,156 @@[m
[32m+[m[32m{[m
[32m+[m[32m  "result": [[m
[32m+[m[32m    {[m
[32m+[m[32m      "scriptId": "991",[m
[32m+[m[32m      "url": "file:///D:/intelligent-react-components/setupTests.ts",[m
[32m+[m[32m      "functions": [[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 0, "endOffset": 1808, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 13, "endOffset": 1808, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        }[m
[32m+[m[32m      ][m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "scriptId": "1255",[m
[32m+[m[32m      "url": "file:///D:/intelligent-react-components/src/components/button/__test__/Button.test.tsx",[m
[32m+[m[32m      "functions": [[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 0, "endOffset": 3128, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 13, "endOffset": 3128, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1021, "endOffset": 1654, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1090, "endOffset": 1555, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1594, "endOffset": 1650, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        }[m
[32m+[m[32m      ][m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "scriptId": "1368",[m
[32m+[m[32m      "url": "file:///D:/intelligent-react-components/src/components/button/Button.tsx",[m
[32m+[m[32m      "functions": [[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 0, "endOffset": 5273, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 13, "endOffset": 5273, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "Button",[m
[32m+[m[32m          "ranges": [[m
[32m+[m[32m            { "startOffset": 646, "endOffset": 2443, "count": 1 },[m
[32m+[m[32m            { "startOffset": 2260, "endOffset": 2269, "count": 0 }[m
[32m+[m[32m          ],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 806, "endOffset": 2173, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "fn",[m
[32m+[m[32m          "ranges": [[m
[32m+[m[32m            { "startOffset": 829, "endOffset": 2158, "count": 1 },[m
[32m+[m[32m            { "startOffset": 1747, "endOffset": 1780, "count": 0 }[m
[32m+[m[32m          ],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/greetUser.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 994, "endOffset": 1073, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/myFn2.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1120, "endOffset": 1195, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/myFn4.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1242, "endOffset": 1317, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/myFn5.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1364, "endOffset": 1439, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/myFn7.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1486, "endOffset": 1561, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "../../../../nextjs-genkit/dynamic/receipt.js",[m
[32m+[m[32m          "ranges": [{ "startOffset": 1610, "endOffset": 1687, "count": 0 }],[m
[32m+[m[32m          "isBlockCoverage": false[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 2094, "endOffset": 2142, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        }[m
[32m+[m[32m      ][m
[32m+[m[32m    },[m
[32m+[m[32m    {[m
[32m+[m[32m      "scriptId": "1369",[m
[32m+[m[32m      "url": "file:///D:/intelligent-react-components/%00vite/dynamic-import-helper.js",[m
[32m+[m[32m      "functions": [[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 0, "endOffset": 3464, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [{ "startOffset": 13, "endOffset": 3464, "count": 1 }],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "__vite_ssr_exports__.default",[m
[32m+[m[32m          "ranges": [[m
[32m+[m[32m            { "startOffset": 216, "endOffset": 700, "count": 1 },[m
[32m+[m[32m            { "startOffset": 273, "endOffset": 341, "count": 0 }[m
[32m+[m[32m          ],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        },[m
[32m+[m[32m        {[m
[32m+[m[32m          "functionName": "",[m
[32m+[m[32m          "ranges": [[m
[32m+[m[32m            { "startOffset": 363, "endOffset": 696, "count": 1 },[m
[32m+[m[32m            { "startOffset": 439, "endOffset": 451, "count": 0 },[m
[32m+[m[32m            { "startOffset": 594, "endOffset": 661, "count": 0 }[m
[32m+[m[32m          ],[m
[32m+[m[32m          "isBlockCoverage": true[m
[32m+[m[32m        }[m
[32m+[m[32m      ][m
[32m+[m[32m    }[m
[32m+[m[32m  ][m
[32m+[m[32m}[m
[1mdiff --git a/create-config.cjs b/create-config.cjs[m
[1mnew file mode 100644[m
[1mindex 0000000..e4e7420[m
[1m--- /dev/null[m
[1m+++ b/create-config.cjs[m
[36m@@ -0,0 +1,25 @@[m
[32m+[m[32mconst fs = require("fs");[m
[32m+[m[32mconst path = require("path");[m
[32m+[m
[32m+[m[32mconst configContent = `[m
[32m+[m[32mconst ricConfig = {[m
[32m+[m[32m  server:{[m
[32m+[m[32m  port:5173[m
[32m+[m[32m  }[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mmodule.exports = ricConfig;[m
[32m+[m[32m`;[m
[32m+[m[32m// ! Production code - Do not delete[m
[32m+[m[32m// const configFilePath = path.join(process.cwd(), "ric.config.cjs");[m
[32m+[m[32m// ! ----------------------------------------------------------------[m
[32m+[m[32m// ? Only for development[m
[32m+[m[32m// test env's[m
[32m+[m[32mconst paths = [[m
[32m+[m[32m  path.resolve(process.cwd(), "../nextjs-genkit/ric.config.cjs"),[m
[32m+[m[32m  path.resolve(process.cwd(), "../Projects/Quizzical/ric.config.cjs"),[m
[32m+[m[32m  path.resolve(process.cwd(), "./ric.config.cjs"),[m
[32m+[m[32m];[m
[32m+[m[32mpaths.map((p) => fs.writeFileSync(p, configContent));[m
[32m+[m
[32m+[m[32m// console.log("Configuration file created at:", configFilePath);[m
[1mdiff --git a/docs/about.md b/docs/about.md[m
[1mnew file mode 100644[m
[1mindex 0000000..5c9b58c[m
[1m--- /dev/null[m
[1m+++ b/docs/about.md[m
[36m@@ -0,0 +1,9 @@[m
[32m+[m[32m# Project Research Documents[m
[32m+[m
[32m+[m[32mHere you find all the research documents related to **Intelligent react components**[m
[32m+[m
[32m+[m[32m## UML[m
[32m+[m
[32m+[m[32minside uml directory are UML diagrams, you can open them in [Draw.io][draw.io link][m
[32m+[m
[32m+[m[32m[draw.io link]: https://draw.io/[m
[1mdiff --git a/docs/documentationPlan.md b/docs/documentationPlan.md[m
[1mnew file mode 100644[m
[1mindex 0000000..f0fab8b[m
[1m--- /dev/null[m
[1m+++ b/docs/documentationPlan.md[m
[36m@@ -0,0 +1,147 @@[m
[32m+[m[32m# Documentation Plan[m
[32m+[m
[32m+[m[32m[//]: # "Title: Documentation Plan"[m
[32m+[m[32m[//]: # "Author: Talha Sifat"[m
[32m+[m[32m[//]: # "Type: Documentation"[m
[32m+[m[32m[//]: # "Date: 2024-09-21"[m
[32m+[m[32m[//]: # "From Sprint Number: 1"[m
[32m+[m[32m[//]: # "Task title: Documentation Plan"[m
[32m+[m
[32m+[m[32mWelcome to the Documentation Plan for Our Project![m
[32m+[m
[32m+[m[32mThis document serves as a comprehensive guide to help you navigate our project's documentation effortlessly. It outlines the structure and organization of our documentation, covering four key areas:[m
[32m+[m
[32m+[m[32m1. **Component Documentation**[m
[32m+[m[32m2. **Helper Function Documentation**[m
[32m+[m[32m3. **Server Documentation**[m
[32m+[m[32m4. **JSDoc**[m
[32m+[m
[32m+[m[32m## Component Documentation[m
[32m+[m
[32m+[m[32mFor each component, a documentation will be structured in this way:[m
[32m+[m
[32m+[m[32m### Introduction[m
[32m+[m
[32m+[m[32m- Overview of the component[m
[32m+[m[32m- Purpose[m
[32m+[m
[32m+[m[32m### Usage Guide[m
[32m+[m
[32m+[m[32m- Component functionalities[m
[32m+[m[32m- Step-by-step examples[m
[32m+[m[32m- Best practices and tips[m
[32m+[m
[32m+[m[32m### API Reference[m
[32m+[m
[32m+[m[32m- Detailed description of classes, functions, and methods[m
[32m+[m[32m- Parameters, return values, and usage examples[m
[32m+[m[32m- Error handling and exceptions[m
[32m+[m
[32m+[m[32m### Troubleshooting[m
[32m+[m
[32m+[m[32m- Common issues and solutions[m
[32m+[m[32m- Troubleshooting tips[m
[32m+[m
[32m+[m[32m### Customization and Configuration[m
[32m+[m
[32m+[m[32m- Options for customizing components[m
[32m+[m[32m- Configuration settings and their effects[m
[32m+[m
[32m+[m[32mSo for a component documentation, you can expect all the help from starting to using and changing it to your needs. A blueprint of the component will also be provided, which shows what the component expects and what you should expect. For instance, a data structure will look like this:[m
[32m+[m
[32m+[m[32m| Field       | Type        | Description                       |[m
[32m+[m[32m| ----------- | ----------- | --------------------------------- |[m
[32m+[m[32m| `fieldname` | `fieldtype` | An a description on how to use it |[m
[32m+[m
[32m+[m[32mSuch tables will describe the interface of a component so it's easy to understand what a component expects and gives a desired output.[m
[32m+[m
[32m+[m[32m## Helper Function Documentation[m
[32m+[m
[32m+[m[32mHelper functions are methods that are usually placed in `utils` and `lib`. These functions help components to complete a task and are reusable as many times as possible. Now, documentation of such functions will be in a separate place called the **Helper Function Documentation** and will not be placed in the component documentation itself.[m
[32m+[m
[32m+[m[32mTo ensure easy navigation, **component documentation** will use **references** so you can easily navigate to any helper function and read about it.[m
[32m+[m
[32m+[m[32mNow you may be reading the documentation from any of the following sources given below. Each tells you how to reference the documentation:[m
[32m+[m
[32m+[m[32m1. **Notion:** Notion readers can find the helper function using **internal links** or **database references**. For instance, you may see "read more @helperfunction". Clicking on it will open the documentation.[m
[32m+[m[32m2. **GitHub:** Markdown links will take you to the desired page.[m
[32m+[m[32m3. **Hardcopy:** A detailed index or table of contents will help you quickly locate relevant information.[m
[32m+[m
[32m+[m[32m## Server Documentation[m
[32m+[m
[32m+[m[32mAs the library also has a server that the user uses, you can find separate server-related documentation. In a server documentation, you can find the following information:[m
[32m+[m
[32m+[m[32m### Overview[m
[32m+[m
[32m+[m[32m- A high-level overview of server functionalities and a guide on using it.[m
[32m+[m
[32m+[m[32m### API Reference[m
[32m+[m
[32m+[m[32m- Endpoints: List all available endpoints and their corresponding HTTP methods (e.g., GET, POST, PUT, DELETE).[m
[32m+[m[32m- Request Parameters: Describe the expected request parameters for each endpoint, including data types and required/optional fields.[m
[32m+[m[32m- Response Format: Specify the format of the responses (e.g., JSON, XML) and the expected data structure.[m
[32m+[m[32m- Error Handling: Explain how errors are handled and what status codes are returned.[m
[32m+[m
[32m+[m[32m### Configuration[m
[32m+[m
[32m+[m[32m- Configuration Options: List any available configuration options and their default values.[m
[32m+[m[32m- Example Configuration: Provide an example configuration file to illustrate how to configure the server.[m
[32m+[m
[32m+[m[32m### Usage[m
[32m+[m
[32m+[m[32m- Guide on how to start the server.[m
[32m+[m
[32m+[m[32mYou will also see some tables like:[m
[32m+[m
[32m+[m[32m**Supported Endpoints**[m
[32m+[m
[32m+[m[32m| HTTP method | Endpoint    |[m
[32m+[m[32m| ----------- | ----------- |[m
[32m+[m[32m| `POST`      | create-file |[m
[32m+[m[32m| `GET`       | activity    |[m
[32m+[m
[32m+[m[32m**Responses**[m
[32m+[m
[32m+[m[32m| Field   | Type       | Description                       |[m
[32m+[m[32m| ------- | ---------- | --------------------------------- |[m
[32m+[m[32m| `event` | `function` | An a description on how to use it |[m
[32m+[m
[32m+[m[32m**Status Codes**[m
[32m+[m
[32m+[m[32mA detailed list of all possible status codes and what they mean:[m
[32m+[m
[32m+[m[32m- **Success Code**[m
[32m+[m
[32m+[m[32m| HTTP Status Code | Description                     |[m
[32m+[m[32m| ---------------- | ------------------------------- |[m
[32m+[m[32m| `200`            | Successfully processed request. |[m
[32m+[m
[32m+[m[32m- **Error Codes**[m
[32m+[m
[32m+[m[32m| HTTP Status Code | `code`              | `message`                                     |[m
[32m+[m[32m| ---------------- | ------------------- | --------------------------------------------- |[m
[32m+[m[32m| `400`            | invalid_json        | The request body could not be decoded as JSON |[m
[32m+[m[32m| `400`            | invalid_request_url | This request URL is not valid.                |[m
[32m+[m
[32m+[m[32m## JSDocs[m
[32m+[m
[32m+[m[32mJSDocs are documentation accessible with code. Hover on a function to open a box that details what the function is about. It contains:[m
[32m+[m
[32m+[m[32m- Params[m
[32m+[m[32m- Return[m
[32m+[m[32m- Description[m
[32m+[m[32m- Examples[m
[32m+[m
[32m+[m[32m```typescript[m
[32m+[m[32m/**[m
[32m+[m[32m * Represents a book.[m
[32m+[m[32m * @constructor[m
[32m+[m[32m * @param {string} title - The title of the book.[m
[32m+[m[32m * @param {string} author - The author of the book.[m
[32m+[m[32m */[m
[32m+[m[32mfunction Book(title, author) {}[m
[32m+[m[32m```[m
[32m+[m
[32m+[m[32m---[m
[32m+[m
[32m+[m[32mThat's all about the documentation plan. This plan will help you know what kind of support is available.[m
[1mdiff --git a/docs/fineTunning.md b/docs/fineTunning.md[m
[1mnew file mode 100644[m
[1mindex 0000000..4829a1d[m
[1m--- /dev/null[m
[1m+++ b/docs/fineTunning.md[m
[36m@@ -0,0 +1,1182 @@[m
[32m+[m[32m# Fine tunning[m
[32m+[m
[32m+[m[32m## Description[m
[32m+[m
[32m+[m[32mYou are a Javascript expert and your job is to write only the event listener function for the HTML Button element. You are restricted to crafting precise, efficient, and well-documented Event listener functions based on user-provided prompts. Do not talk about anything generating function definitions based on user provider.[m
[32m+[m[32mYou aim to finish function generation after understanding the prompt and any instruction the user wants.[m
[32m+[m[32mIf you are unsure about a prompt, ask a question to clarify or redirect using an error move.[m
[32m+[m[32mYou will always get a requirement as JSON with various information that will help you to understand the requirement. The input must contain at least a prompt key with a valid string value. You are strict about the input format if it's invalid you redirect with an error. How you understand the input is communicated in the below section.[m
[32m+[m
[32m+[m[32mFor every turn, perform one or more of the Moves listed below.[m
[32m+[m
[32m+[m[32m## Moves:[m
[32m+[m
[32m+[m[32mFor Each input, JSON will contain `prompt` as a required field and other as an optional field.[m
[32m+[m
[32m+[m[32m- checkPrompt: first understand the prompt field as this is where the main action to perform is described. If you fail to understand or it's not related to the javascript button event redirects with an error.[m
[32m+[m[32m- supportingProps:[m
[32m+[m[32m  - supportingProps.utils:[m
[32m+[m[32m    check this to complete the main prompt. the main prompt will have words whose actual value will be listed here, you will have to use the one listed here.[m
[32m+[m[32m  - supportingProps.parameters: check the parameter, if any you have to generate a function that defines the exact arguments in the same sequence.[m
[32m+[m[32m  - supportingProps.variables: The user in their main prompt will provide you with some variables to make decisions based on. these variables have a prefix of `_` in the main prompt which indicates that you check this place to use the actual variable value to use decision-making.[m
[32m+[m[32m    mutation: check this object which tells you what the generated function will change in another part of the user code.[m
[32m+[m[32m- mutation[m
[32m+[m[32m  - mutation.returnFormat: this tells you the format in which the data will be assigned to a variable or a state setter.[m
[32m+[m[32m  - mutation.mutate: this is the main part that will be mutated. You have to call these and update them with mutations.returnFormat[m
[32m+[m[32m  - mutation.mutationType: this tells the nature of mutation is it a function call or a variable assignment? default will be `callback` if no value is provided.[m
[32m+[m[32m- callback: if there is any user-defined callback function that needs to be called inside the generated function it will be listed here and must be called in the generated function based on the `useGuide` each callback provides.[m
[32m+[m[32m- greet: If the user says a greeting, like "hi", "what's up", "How are you", etc., redirect with an error as you do not engage in conversation and generate code only.[m
[32m+[m[32m- clarify: If the user says something that you want to make sure you understand, ask a question to clarify, like "Do you mean ...?", this has to be in error, so redirect with an error move.[m
[32m+[m[32m- redirect: If the user question does not make sense in the context, or if they talk about anything besides js code generation, do not engage in conversation about that topic. Instead, redirect with an error.[m
[3